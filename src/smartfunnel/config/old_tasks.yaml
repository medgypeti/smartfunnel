
# scrape_youtube_channel_task:
#   description: >
#         Scrape the latest five videos from the specified YouTube channel.
#         Extract relevant information about the content of the latest five videos.
#         Ensure that all information comes directly from the YouTube channel and videos. 
#         Do not make up any information.

#         Here is the YouTube channel handle:

#         {youtube_channel_handle}
#   expected_output: >
#         Extract relevant information about the content of the latest five videos 
#         from the specified YouTube channel.
#   agent: scrape_agent

scrape_youtube_channel_task:
  description: >
        Scrape the 10 most relevant videos from the specified YouTube channel using the "Fetch Relevant Videos for Channel" tool.
        IMPORTANT: if {youtube_channel_handle} not found, DO NOT use tool, and move on to the next task.
        If {youtube_channel_handle} is found, extract relevant information about the content of the most relevant ten videos.
        Ensure that all information comes directly from the YouTube channel and videos. 
        Do not make up any information.

        Here is the YouTube channel handle: {youtube_channel_handle}
  required_input: >
        youtube_channel_handle
  expected_output: >
        Extract relevant information about the content of the ten most relevant videos 
        from the {youtube_channel_handle} YouTube channel.
  agent: scrape_agent

# process_video_task:
#   description: >
#         Process the extracted video urls from the previous task 
#         and add them to the vector database.
#         Ensure that each video is properly added to the vector database.
#         All information must come directly from the searches. 
#         Do not make up any information.
#         IMPORTANT: if {youtube_channel_handle} not found, 
#         return "YouTube channel not found", and move on to the next task.
#   expected_output: >
#         Successfully add the videos to the vector database.
#   agent: vector_db_agent

process_video_task:
  description: >
        Process the extracted video urls from the previous task 
        and add them to the vector database.
        Ensure that each video is properly added to the vector database.
        All information must come directly from the searches. 
        Do not make up any information.
        IMPORTANT: if {youtube_channel_handle} not found, DO NOT use tool "Add Video to Vector DB", and move on to the next task.
  required_input: >
        youtube_channel_handle
  expected_output: >
        Successfully add the videos to the vector database.
  agent: vector_db_agent

fetch_and_add_instagram_audio_task:
  description: >
    Use the "Fetch and Process Instagram Audio" tool to fetch all the available posts from the {instagram_username}
    AND add them to the vector database.
    IMPORTANT: if {instagram_username} not found, DO NOT use tool, and move on to the next task.
    Here is what you should do:
    1. Retrieve the latest posts from the instagram handle.
    2. Process any video content
    3. Add the audio to the vector database

    Here is the Instagram handle: {instagram_username}
  required_input: >
        instagram_username
  expected_output: >
    Successfully add the audio to the vector database.
  agent: fetch_to_add_instagram_audio_agent

find_initial_information_task:
  description: >
        query the vector database to populate the `ContentCreatorInfo` model with 
        as much information as possible, using the "Query Vector DB" tool.
        IMPORTANT: Move to the next task if {youtube_channel_handle} is NOT found. DO NOT try to guess or figure out the name of an account.        
        Here is a query example: "What are the values/lessons that the author transmits throughout the video that makes him likeable, trustworthy?"
        IMPORTANT: if {youtube_channel_handle} not found, DO NOT use tool, and move on to the next task.

        You need to gather enough information about the content creator to be able to write 3000 words about them.

        Here is the `ContentCreatorInfo` model:
        ```
            class ValueObject(BaseModel):
                name: str = Field(
                    ..., 
                    description="The name of the value, e.g., 'perseverance'"
                )
                origin: str = Field(
                    ..., 
                    description="The origin or development of the value, e.g., 'Developed this trait when joining the army and completing the program after 3 attempts'"
                )
                impact_today: str = Field(
                    ..., 
                    description="How the value impacts how the creator works today, e.g., 'When cold calling people, understands the power of numbers and having to go through a lot of setbacks to get a successful call'"
                )

                # Add default constructor for error handling
                @classmethod
                def default(cls) -> 'ValueObject':
                    return cls(
                        name="",
                        origin="",
                        impact_today=""
                    )

            class ChallengeObject(BaseModel):
                description: str = Field(
                    ..., 
                    description="Description of the challenge, e.g., 'Experiencing homelessness in 2009'"
                )
                learnings: str = Field(
                    ..., 
                    description="The lessons the creator learned from the challenge, e.g., 'Made survival and ruthless prioritization his first priority'"
                )

                @classmethod
                def default(cls) -> 'ChallengeObject':
                    return cls(
                        description="",
                        learnings=""
                    )

            class AchievementObject(BaseModel):
                description: str = Field(
                    ..., 
                    description="Description of the achievement, e.g., 'Founding own creative agency \"On Air\"', 'Speaking at TEDx Conferences'"
                )

                @classmethod
                def default(cls) -> 'AchievementObject':
                    return cls(
                        description=""
                    )

            class LifeEventObject(BaseModel):
                name: str = Field(
                    ..., 
                    description="Name or title of the life event, e.g., 'Childhood'"
                )
                description: str = Field(
                    ..., 
                    description="Description of the life event, e.g., 'Grew up on a quiet island called La DÃ©sirade, in Guadeloupe'"
                )

                @classmethod
                def default(cls) -> 'LifeEventObject':
                    return cls(
                        name="",
                        description=""
                    )

            class BusinessObject(BaseModel):
                name: str = Field(
                    ..., 
                    description="Name of the business, e.g., 'Agency \"On Air\"'"
                )
                description: str = Field(
                    ..., 
                    description="Description of the business, e.g., 'Marketing strategist to drive innovation in large corporates'"
                )
                genesis: str = Field(
                    ..., 
                    description="How the business started, e.g., 'Started as a freelancer, building out the skills to turn them into an agency in 2010'"
                )

                @classmethod
                def default(cls) -> 'BusinessObject':
                    return cls(
                        name="",
                        description="",
                        genesis=""
                    )

            class ContentCreatorInfo(BaseModel):
                life_events: List[LifeEventObject] = Field(
                    ..., 
                    description="List of significant life events that shaped the creator's journey"
                )
                business: BusinessObject = Field(
                    ..., 
                    description="Information about the creator's business or primary professional venture"
                )
                values: List[ValueObject] = Field(
                    ..., 
                    description="List of the creator's core values that guide their work and life"
                )
                challenges: List[ChallengeObject] = Field(
                    ..., 
                    description="List of significant challenges faced by the creator and how they overcame them"
                )
                achievements: List[AchievementObject] = Field(
                    ..., 
                    description="List of the creator's notable achievements and milestones"
                )
                first_name: Optional[str] = Field(
                    None, 
                    description="The first name of the content creator"
                )
                last_name: Optional[str] = Field(
                    None, 
                    description="The last name of the content creator"
                )

                @classmethod
                def default(cls) -> 'ContentCreatorInfo':
                    return cls(
                        first_name="",
                        last_name="",
                        life_events=[LifeEventObject.default()],
                        business=BusinessObject.default(),
                        values=[ValueObject.default()],
                        challenges=[ChallengeObject.default()],
                        achievements=[AchievementObject.default()]
                    )
        ```
        query guidelines:
        IMPORTANT: Pass following list of queries to "Query Vector DB" tool to populate the `ContentCreatorInfo` model:
        query:"What are the values/lessons that the author transmits throughout the video that makes him likeable, trustworthy?" to populate "ValueObject" information.
        query:"What are the setbacks, failures that the author encountered and learnt from?" to populate "ChallengeObject" information.
        query:"What are the key achievements that the author achieved that gives him more credibility and successful?" to populate "AchievementObject" information.
        query:"What are the life events/circumstances that shaped the character of the author throughout his life?" to populate "LifeEventObject" information.
        query:"What was the context/environment that triggered the author to decide to change his life around and launch this business?" to populate "BusinessObject" information.
        query: What is the first name, last name of author of the video? If looking for contact details.
        query: "What are the tips mentioned in the video that I can implement to grow my business?" to populate "BusinessObject" information.
        query: "What are the key characteristics of the business of the author and the services I can buy from him?" to populate "BusinessObject" information.

        Warnings:
        IMPORTANT: ONLY RETURN THE INFO IF IT RELATES TO THE CONTENT CREATOR. YOU SHOULD NOT POPULATE THE INFO IF IT RELATES TO A GUEST IN THE VIDEO.
        If any information is missing, leave the value as None.
        All information must come directly from the searches. 
        Do not make up any information.
        Rephrase and re-query to the vector database as necessary to obtain all needed information.
        Each Field in the `ContentCreatorInfo` model should be 4-5 sentences long. They should be supported by real quotes from the video.
        IMPORTANT: The output should be a ContentCreatorInfo object. NOTHING ELSE.
        IMPORTANT: if {youtube_channel_handle} not found, DO NOT use tool, and move on to the next task.
  required_input: >
        youtube_channel_handle
  expected_output: >
        ContentCreatorInfo(
            first_name="Antoine",
            last_name="Blanco",
            life_events=[
                LifeEventObject(
                    name="Early Childhood in Toulouse",
                    description="Born and raised in Toulouse, France, as the middle child in a family of three brothers, fostering strong familial bonds"
                ),
                LifeEventObject(
                    name="Family Financial Crisis",
                    description="At age 13, experienced parents' divorce following father's job loss. Family home was sold, relocating with mother to a 30mÂ² suburban studio, instilling a keen awareness of financial realities"
                ),
                LifeEventObject(
                    name="Pivotal Sports Injury",
                    description="At 15, suffered severe rugby injury resulting in double collarbone fractures. This led to discovering CrossFit, marking a significant shift in physical training and mental resilience"
                ),
                LifeEventObject(
                    name="Military Training Attempt",
                    description="In 2019, at age 19, entered rigorous military pilot training program, showcasing discipline and ambition"
                ),
                LifeEventObject(
                    name="Pandemic Career Shift",
                    description="Military pilot training postponed due to COVID-19 in 2020, catalyzing a reevaluation of career path towards entrepreneurship"
                ),
                LifeEventObject(
                    name="Launch of Online Coaching",
                    description="In January 2021, at age 21, invested â¬997 in first online course and launched 'Fitness Business Academy', an online sports coaching business"
                ),
                LifeEventObject(
                    name="Expansion into Business Mentorship",
                    description="In 2022, at age 22, created 'Passion to Profits' course, helping others transform their passions into sustainable online businesses"
                ),
                LifeEventObject(
                    name="Strategic Relocation to Dubai",
                    description="Moved operations to Dubai, expanding network and forming key relationships with entrepreneurs like Yomi Denzel and Iman Gadzhi"
                )
            ],
            business=BusinessObject(
                name="Blanco Enterprises",
                description="A multi-faceted online education company offering targeted courses in fitness entrepreneurship and passion-based business development",
                genesis="Evolved from 'Fitness Business Academy' launched in January 2021, expanded to include 'Passion to Profits' course in 2022. Grew from a solo operation to a team of over 30 collaborators, including course mentors, customer support, and marketing specialists"
            ),
            values=[
                ValueObject(
                    name="Deep Human Connections",
                    origin="Nurturing close relationships with two brothers and mother in Toulouse",
                    impact_today="Implements a high-touch, personalized approach in business mentoring. Conducts weekly live Q&A sessions with course participants and maintains an active community forum for peer support"
                ),
                ValueObject(
                    name="Financial Intelligence",
                    origin="Experiencing drastic lifestyle change at 13 due to family's financial crisis",
                    impact_today="Emphasizes sustainable business models and smart money management in courses. Includes modules on pricing strategy, reinvestment principles, and personal finance management for entrepreneurs"
                ),
                ValueObject(
                    name="Resilience Through Adversity",
                    origin="Overcoming career-threatening rugby injury at 15 and pivoting to CrossFit",
                    impact_today="Incorporates 'Setback to Comeback' module in courses, teaching strategies for business pivots and mental resilience. Shares personal story as case study in overcoming obstacles"
                ),
                ValueObject(
                    name="Grounded Success Mindset",
                    origin="Achieving millionaire status by 24 while remembering humble beginnings",
                    impact_today="Promotes 'Humble Hustle' philosophy in business practices. Encourages students to set ambitious goals while maintaining authenticity and social responsibility"
                ),
                ValueObject(
                    name="Disciplined Execution",
                    origin="Rigorous military training experience and rapid business scaling",
                    impact_today="Developed 'Strategic Action Planner' tool for course participants, emphasizing daily discipline, strategic planning, and consistent execution in business growth"
                )
            ],
            challenges=[
                ChallengeObject(
                    description="Adapting to 30mÂ² living space after family financial downturn",
                    learnings="Developed minimalist efficiency mindset. Created 'Lean Launch Strategy' in courses, teaching how to start businesses with minimal resources and maximize ROI"
                ),
                ChallengeObject(
                    description="Rebuilding physical and mental strength after sports injury",
                    learnings="Formulated 'Adaptive Growth Framework' for businesses, teaching flexibility in strategy and product development based on market feedback and personal strengths"
                ),
                ChallengeObject(
                    description="Pivoting from military career to entrepreneurship due to pandemic",
                    learnings="Designed 'Opportunity in Crisis' module, instructing students on identifying market gaps and adapting services during global or personal challenges"
                ),
                ChallengeObject(
                    description="Scaling operations from solo entrepreneur to managing 30+ team members",
                    learnings="Developed 'Scalable Team Structure' blueprint, outlining hiring strategies, team management, and leadership development for growing online businesses"
                )
            ],
            achievements=[
                AchievementObject(
                    description="Transformed â¬997 investment into â¬10,000 monthly revenue within 90 days of launching 'Fitness Business Academy'"
                ),
                AchievementObject(
                    description="Created 'Passion to Profits' course, helping over 500 entrepreneurs establish profitable online businesses within its first year"
                ),
                AchievementObject(
                    description="Scaled 'Blanco Enterprises' to generate an average of â¬300,000 per month by age 24"
                ),
                AchievementObject(
                    description="Built remote team of 30+ specialists, including 5 full-time course mentors, 10 customer support agents, and 15 marketing and content creation experts"
                ),
                AchievementObject(
                    description="Successful expansion to Dubai market, establishing partnerships with 3 prominent local fitness brands for case studies and collaborations"
                ),
                AchievementObject(
                    description="Developed proprietary 'Blanco Method' for Instagram-based client acquisition, achieving 15% conversion rate on sales calls"
                ),
                AchievementObject(
                    description="Featured as 'Top 30 Under 30 Entrepreneur' in French business publication, highlighting innovative online education model"
                ),
                AchievementObject(
                    description="Achieved 92% student satisfaction rate across all courses, with 78% of students reporting doubled income within 6 months of course completion"
                )
            ]
        )
  agent: general_research_agent

follow_up_task:
  description: >
        You will pass queries to the tool "Query Vector DB" to populate the `ContentCreatorInfo` model. 
        Here is an example of the queries you should pass: "What are the values/lessons that the author transmits throughout the video that makes him likeable, trustworthy?" to populate "ValueObject" information.
        IMPORTANT: Move to the next task if {youtube_channel_handle} is NOT found. DO NOT try to guess or figure out the name of an account.               
        Query guidelines to pass to the "Query Vector DB" tool to populate the `ContentCreatorInfo` model:
        query:"What are the values/lessons that the author transmits throughout the video that makes him likeable, trustworthy?" if you want to gather "ValueObject" information.
        query:"What are the setbacks, failures that the author encountered and learnt from?" if you want to populate "ChallengeObject" information.
        query:"What are the key achievements that the author achieved that gives him more credibility and successful?" if you want to populate "AchievementObject" information.
        query:"What are the life events/circumstances that shaped the character of the author throughout his life?" if you want to populate "LifeEventObject" information.
        query:"What was the context/environment that triggered the author to decide to change his life around and launch this business?" if you want to populate "BusinessObject" information.
        query: What is the first name, last name of author of the video? If looking for contact details.
        query: "What is the context within which the author started his business?" if you want to populate "BusinessObject" information.
        query: "What are the tips mentioned in the video that I can implement to grow my business?" if you want to populate "BusinessObject" information.
        query: "What are the key characteristics of the business of the author and the services I can buy from him?" if you want to gather "BusinessObject" information.

        Warnings:
        IMPORTANT: The output should be a ContentCreatorInfo object. NOTHING ELSE.
        You should run different queries based on the information you are looking for.
        All information must come directly from the searches. 
        Do not make up any information.
        Be thorough and creative in your search for missing data.
        You need to gather enough information about the content creator to be able to write 3000 words about them.
        IMPORTANT: ONLY RETURN THE INFO IF IT RELATES TO THE CONTENT CREATOR. YOU SHOULD NOT POPULATE THE INFO IF IT RELATES TO A GUEST IN THE VIDEO.
  required_input: >
        youtube_channel_handle
  expected_output: >
        ContentCreatorInfo(
            first_name="Antoine",
            last_name="Blanco",
            life_events=[
                LifeEventObject(
                    name="Early Childhood in Toulouse",
                    description="Born and raised in Toulouse, France, as the middle child in a family of three brothers, fostering strong familial bonds"
                ),
                LifeEventObject(
                    name="Family Financial Crisis",
                    description="At age 13, experienced parents' divorce following father's job loss. Family home was sold, relocating with mother to a 30mÂ² suburban studio, instilling a keen awareness of financial realities"
                ),
                LifeEventObject(
                    name="Pivotal Sports Injury",
                    description="At 15, suffered severe rugby injury resulting in double collarbone fractures. This led to discovering CrossFit, marking a significant shift in physical training and mental resilience"
                ),
                LifeEventObject(
                    name="Military Training Attempt",
                    description="In 2019, at age 19, entered rigorous military pilot training program, showcasing discipline and ambition"
                ),
                LifeEventObject(
                    name="Pandemic Career Shift",
                    description="Military pilot training postponed due to COVID-19 in 2020, catalyzing a reevaluation of career path towards entrepreneurship"
                ),
                LifeEventObject(
                    name="Launch of Online Coaching",
                    description="In January 2021, at age 21, invested â¬997 in first online course and launched 'Fitness Business Academy', an online sports coaching business"
                ),
                LifeEventObject(
                    name="Expansion into Business Mentorship",
                    description="In 2022, at age 22, created 'Passion to Profits' course, helping others transform their passions into sustainable online businesses"
                ),
                LifeEventObject(
                    name="Strategic Relocation to Dubai",
                    description="Moved operations to Dubai, expanding network and forming key relationships with entrepreneurs like Yomi Denzel and Iman Gadzhi"
                )
            ],
            business=BusinessObject(
                name="Blanco Enterprises",
                description="A multi-faceted online education company offering targeted courses in fitness entrepreneurship and passion-based business development",
                genesis="Evolved from 'Fitness Business Academy' launched in January 2021, expanded to include 'Passion to Profits' course in 2022. Grew from a solo operation to a team of over 30 collaborators, including course mentors, customer support, and marketing specialists"
            ),
            values=[
                ValueObject(
                    name="Deep Human Connections",
                    origin="Nurturing close relationships with two brothers and mother in Toulouse",
                    impact_today="Implements a high-touch, personalized approach in business mentoring. Conducts weekly live Q&A sessions with course participants and maintains an active community forum for peer support"
                ),
                ValueObject(
                    name="Financial Intelligence",
                    origin="Experiencing drastic lifestyle change at 13 due to family's financial crisis",
                    impact_today="Emphasizes sustainable business models and smart money management in courses. Includes modules on pricing strategy, reinvestment principles, and personal finance management for entrepreneurs"
                ),
                ValueObject(
                    name="Resilience Through Adversity",
                    origin="Overcoming career-threatening rugby injury at 15 and pivoting to CrossFit",
                    impact_today="Incorporates 'Setback to Comeback' module in courses, teaching strategies for business pivots and mental resilience. Shares personal story as case study in overcoming obstacles"
                ),
                ValueObject(
                    name="Grounded Success Mindset",
                    origin="Achieving millionaire status by 24 while remembering humble beginnings",
                    impact_today="Promotes 'Humble Hustle' philosophy in business practices. Encourages students to set ambitious goals while maintaining authenticity and social responsibility"
                ),
                ValueObject(
                    name="Disciplined Execution",
                    origin="Rigorous military training experience and rapid business scaling",
                    impact_today="Developed 'Strategic Action Planner' tool for course participants, emphasizing daily discipline, strategic planning, and consistent execution in business growth"
                )
            ],
            challenges=[
                ChallengeObject(
                    description="Adapting to 30mÂ² living space after family financial downturn",
                    learnings="Developed minimalist efficiency mindset. Created 'Lean Launch Strategy' in courses, teaching how to start businesses with minimal resources and maximize ROI"
                ),
                ChallengeObject(
                    description="Rebuilding physical and mental strength after sports injury",
                    learnings="Formulated 'Adaptive Growth Framework' for businesses, teaching flexibility in strategy and product development based on market feedback and personal strengths"
                ),
                ChallengeObject(
                    description="Pivoting from military career to entrepreneurship due to pandemic",
                    learnings="Designed 'Opportunity in Crisis' module, instructing students on identifying market gaps and adapting services during global or personal challenges"
                ),
                ChallengeObject(
                    description="Scaling operations from solo entrepreneur to managing 30+ team members",
                    learnings="Developed 'Scalable Team Structure' blueprint, outlining hiring strategies, team management, and leadership development for growing online businesses"
                )
            ],
            achievements=[
                AchievementObject(
                    description="Transformed â¬997 investment into â¬10,000 monthly revenue within 90 days of launching 'Fitness Business Academy'"
                ),
                AchievementObject(
                    description="Created 'Passion to Profits' course, helping over 500 entrepreneurs establish profitable online businesses within its first year"
                ),
                AchievementObject(
                    description="Scaled 'Blanco Enterprises' to generate an average of â¬300,000 per month by age 24"
                ),
                AchievementObject(
                    description="Built remote team of 30+ specialists, including 5 full-time course mentors, 10 customer support agents, and 15 marketing and content creation experts"
                ),
                AchievementObject(
                    description="Successful expansion to Dubai market, establishing partnerships with 3 prominent local fitness brands for case studies and collaborations"
                ),
                AchievementObject(
                    description="Developed proprietary 'Blanco Method' for Instagram-based client acquisition, achieving 15% conversion rate on sales calls"
                ),
                AchievementObject(
                    description="Featured as 'Top 30 Under 30 Entrepreneur' in French business publication, highlighting innovative online education model"
                ),
                AchievementObject(
                    description="Achieved 92% student satisfaction rate across all courses, with 78% of students reporting doubled income within 6 months of course completion"
                )
            ]
        )
        IMPORTANT: if {youtube_channel_handle} not found, 
        return "YouTube channel not found", and move on to the next task.
  agent: follow_up_agent

find_instagram_information_task:
  description: >
        Pass queries to the "Query Instagram DB" tool to populate the ContentCreatorInfo model.
        IMPORTANT: Move to the next task if {instagram_username} is NOT found. DO NOT try to guess or figure out the name of an account.        
        The output of the task should be the ContentCreatorInfo object. NOTHING ELSE.

        Here is the `ContentCreatorInfo` model:
        ```
            class ValueObject(BaseModel):
                name: str = Field(
                    ..., 
                    description="The name of the value, e.g., 'perseverance'"
                )
                origin: str = Field(
                    ..., 
                    description="The origin or development of the value, e.g., 'Developed this trait when joining the army and completing the program after 3 attempts'"
                )
                impact_today: str = Field(
                    ..., 
                    description="How the value impacts how the creator works today, e.g., 'When cold calling people, understands the power of numbers and having to go through a lot of setbacks to get a successful call'"
                )

                # Add default constructor for error handling
                @classmethod
                def default(cls) -> 'ValueObject':
                    return cls(
                        name="",
                        origin="",
                        impact_today=""
                    )

            class ChallengeObject(BaseModel):
                description: str = Field(
                    ..., 
                    description="Description of the challenge, e.g., 'Experiencing homelessness in 2009'"
                )
                learnings: str = Field(
                    ..., 
                    description="The lessons the creator learned from the challenge, e.g., 'Made survival and ruthless prioritization his first priority'"
                )

                @classmethod
                def default(cls) -> 'ChallengeObject':
                    return cls(
                        description="",
                        learnings=""
                    )

            class AchievementObject(BaseModel):
                description: str = Field(
                    ..., 
                    description="Description of the achievement, e.g., 'Founding own creative agency \"On Air\"', 'Speaking at TEDx Conferences'"
                )

                @classmethod
                def default(cls) -> 'AchievementObject':
                    return cls(
                        description=""
                    )

            class LifeEventObject(BaseModel):
                name: str = Field(
                    ..., 
                    description="Name or title of the life event, e.g., 'Childhood'"
                )
                description: str = Field(
                    ..., 
                    description="Description of the life event, e.g., 'Grew up on a quiet island called La DÃ©sirade, in Guadeloupe'"
                )

                @classmethod
                def default(cls) -> 'LifeEventObject':
                    return cls(
                        name="",
                        description=""
                    )

            class BusinessObject(BaseModel):
                name: str = Field(
                    ..., 
                    description="Name of the business, e.g., 'Agency \"On Air\"'"
                )
                description: str = Field(
                    ..., 
                    description="Description of the business, e.g., 'Marketing strategist to drive innovation in large corporates'"
                )
                genesis: str = Field(
                    ..., 
                    description="How the business started, e.g., 'Started as a freelancer, building out the skills to turn them into an agency in 2010'"
                )

                @classmethod
                def default(cls) -> 'BusinessObject':
                    return cls(
                        name="",
                        description="",
                        genesis=""
                    )

            class ContentCreatorInfo(BaseModel):
                life_events: List[LifeEventObject] = Field(
                    ..., 
                    description="List of significant life events that shaped the creator's journey"
                )
                business: BusinessObject = Field(
                    ..., 
                    description="Information about the creator's business or primary professional venture"
                )
                values: List[ValueObject] = Field(
                    ..., 
                    description="List of the creator's core values that guide their work and life"
                )
                challenges: List[ChallengeObject] = Field(
                    ..., 
                    description="List of significant challenges faced by the creator and how they overcame them"
                )
                achievements: List[AchievementObject] = Field(
                    ..., 
                    description="List of the creator's notable achievements and milestones"
                )
                first_name: Optional[str] = Field(
                    None, 
                    description="The first name of the content creator"
                )
                last_name: Optional[str] = Field(
                    None, 
                    description="The last name of the content creator"
                )

                @classmethod
                def default(cls) -> 'ContentCreatorInfo':
                    return cls(
                        first_name="",
                        last_name="",
                        life_events=[LifeEventObject.default()],
                        business=BusinessObject.default(),
                        values=[ValueObject.default()],
                        challenges=[ChallengeObject.default()],
                        achievements=[AchievementObject.default()]
                    )
        ```
    Use these exact queries:
    For values:
    "What core values does the author demonstrate?"
    "How does their background influence their values?"
    "How do their values impact their work?"
    
    For challenges:
    "What obstacles has the author overcome?"
    "What lessons came from their setbacks?"
    "How has their journey shaped their approach?"
    
    For achievements:
    "What are their significant achievements?"
    "What milestones show their success?"
    "What metrics demonstrate their growth?"
    
    For life events:
    "What key events shaped their journey?"
    "What moments changed their path?"
    "What experiences influenced their business?"
    
    For business information:
    "What is their business model?"
    "How did they build their business?"
    "What methods have they developed?"

    Rules for queries:
    - Use plain text queries only
    - One query at a time
    - Keep focused and specific

    Rules for object output:
    - Only return info found using tool
    - Do not make up any information
    - Do not use info from the template that is not in the creator's information
    - Each field from object should be 4-5 sentences long.
  required_input: >
        instagram_username
  expected_output: >
          ContentCreatorInfo(
            first_name="Antoine",
            last_name="Blanco",
            life_events=[
                LifeEventObject(
                    name="Early Childhood in Toulouse",
                    description="Born and raised in Toulouse, France, as the middle child in a family of three brothers, fostering strong familial bonds"
                ),
                LifeEventObject(
                    name="Family Financial Crisis",
                    description="At age 13, experienced parents' divorce following father's job loss. Family home was sold, relocating with mother to a 30mÂ² suburban studio, instilling a keen awareness of financial realities"
                ),
                LifeEventObject(
                    name="Pivotal Sports Injury",
                    description="At 15, suffered severe rugby injury resulting in double collarbone fractures. This led to discovering CrossFit, marking a significant shift in physical training and mental resilience"
                ),
                LifeEventObject(
                    name="Military Training Attempt",
                    description="In 2019, at age 19, entered rigorous military pilot training program, showcasing discipline and ambition"
                ),
                LifeEventObject(
                    name="Pandemic Career Shift",
                    description="Military pilot training postponed due to COVID-19 in 2020, catalyzing a reevaluation of career path towards entrepreneurship"
                ),
                LifeEventObject(
                    name="Launch of Online Coaching",
                    description="In January 2021, at age 21, invested â¬997 in first online course and launched 'Fitness Business Academy', an online sports coaching business"
                ),
                LifeEventObject(
                    name="Expansion into Business Mentorship",
                    description="In 2022, at age 22, created 'Passion to Profits' course, helping others transform their passions into sustainable online businesses"
                ),
                LifeEventObject(
                    name="Strategic Relocation to Dubai",
                    description="Moved operations to Dubai, expanding network and forming key relationships with entrepreneurs like Yomi Denzel and Iman Gadzhi"
                )
            ],
            business=BusinessObject(
                name="Blanco Enterprises",
                description="A multi-faceted online education company offering targeted courses in fitness entrepreneurship and passion-based business development",
                genesis="Evolved from 'Fitness Business Academy' launched in January 2021, expanded to include 'Passion to Profits' course in 2022. Grew from a solo operation to a team of over 30 collaborators, including course mentors, customer support, and marketing specialists"
            ),
            values=[
                ValueObject(
                    name="Deep Human Connections",
                    origin="Nurturing close relationships with two brothers and mother in Toulouse",
                    impact_today="Implements a high-touch, personalized approach in business mentoring. Conducts weekly live Q&A sessions with course participants and maintains an active community forum for peer support"
                ),
                ValueObject(
                    name="Financial Intelligence",
                    origin="Experiencing drastic lifestyle change at 13 due to family's financial crisis",
                    impact_today="Emphasizes sustainable business models and smart money management in courses. Includes modules on pricing strategy, reinvestment principles, and personal finance management for entrepreneurs"
                ),
                ValueObject(
                    name="Resilience Through Adversity",
                    origin="Overcoming career-threatening rugby injury at 15 and pivoting to CrossFit",
                    impact_today="Incorporates 'Setback to Comeback' module in courses, teaching strategies for business pivots and mental resilience. Shares personal story as case study in overcoming obstacles"
                ),
                ValueObject(
                    name="Grounded Success Mindset",
                    origin="Achieving millionaire status by 24 while remembering humble beginnings",
                    impact_today="Promotes 'Humble Hustle' philosophy in business practices. Encourages students to set ambitious goals while maintaining authenticity and social responsibility"
                ),
                ValueObject(
                    name="Disciplined Execution",
                    origin="Rigorous military training experience and rapid business scaling",
                    impact_today="Developed 'Strategic Action Planner' tool for course participants, emphasizing daily discipline, strategic planning, and consistent execution in business growth"
                )
            ],
            challenges=[
                ChallengeObject(
                    description="Adapting to 30mÂ² living space after family financial downturn",
                    learnings="Developed minimalist efficiency mindset. Created 'Lean Launch Strategy' in courses, teaching how to start businesses with minimal resources and maximize ROI"
                ),
                ChallengeObject(
                    description="Rebuilding physical and mental strength after sports injury",
                    learnings="Formulated 'Adaptive Growth Framework' for businesses, teaching flexibility in strategy and product development based on market feedback and personal strengths"
                ),
                ChallengeObject(
                    description="Pivoting from military career to entrepreneurship due to pandemic",
                    learnings="Designed 'Opportunity in Crisis' module, instructing students on identifying market gaps and adapting services during global or personal challenges"
                ),
                ChallengeObject(
                    description="Scaling operations from solo entrepreneur to managing 30+ team members",
                    learnings="Developed 'Scalable Team Structure' blueprint, outlining hiring strategies, team management, and leadership development for growing online businesses"
                )
            ],
            achievements=[
                AchievementObject(
                    description="Transformed â¬997 investment into â¬10,000 monthly revenue within 90 days of launching 'Fitness Business Academy'"
                ),
                AchievementObject(
                    description="Created 'Passion to Profits' course, helping over 500 entrepreneurs establish profitable online businesses within its first year"
                ),
                AchievementObject(
                    description="Scaled 'Blanco Enterprises' to generate an average of â¬300,000 per month by age 24"
                ),
                AchievementObject(
                    description="Built remote team of 30+ specialists, including 5 full-time course mentors, 10 customer support agents, and 15 marketing and content creation experts"
                ),
                AchievementObject(
                    description="Successful expansion to Dubai market, establishing partnerships with 3 prominent local fitness brands for case studies and collaborations"
                ),
                AchievementObject(
                    description="Developed proprietary 'Blanco Method' for Instagram-based client acquisition, achieving 15% conversion rate on sales calls"
                ),
                AchievementObject(
                    description="Featured as 'Top 30 Under 30 Entrepreneur' in French business publication, highlighting innovative online education model"
                ),
                AchievementObject(
                    description="Achieved 92% student satisfaction rate across all courses, with 78% of students reporting doubled income within 6 months of course completion"
                )
            ]
        )
  agent: general_research_agent

follow_up_instagram_task:
  description: >
    Pass queries to the "Query Instagram DB" tool for missing ContentCreatorInfo data.
    IMPORTANT: Move to the next task if {instagram_username} is NOT found. DO NOT try to guess or figure out the name of an account.        

    The output of the task should be the ContentCreatorInfo object. NOTHING ELSE.

        Here is the `ContentCreatorInfo` model:
        ```
            class ValueObject(BaseModel):
                name: str = Field(
                    ..., 
                    description="The name of the value, e.g., 'perseverance'"
                )
                origin: str = Field(
                    ..., 
                    description="The origin or development of the value, e.g., 'Developed this trait when joining the army and completing the program after 3 attempts'"
                )
                impact_today: str = Field(
                    ..., 
                    description="How the value impacts how the creator works today, e.g., 'When cold calling people, understands the power of numbers and having to go through a lot of setbacks to get a successful call'"
                )

                # Add default constructor for error handling
                @classmethod
                def default(cls) -> 'ValueObject':
                    return cls(
                        name="",
                        origin="",
                        impact_today=""
                    )

            class ChallengeObject(BaseModel):
                description: str = Field(
                    ..., 
                    description="Description of the challenge, e.g., 'Experiencing homelessness in 2009'"
                )
                learnings: str = Field(
                    ..., 
                    description="The lessons the creator learned from the challenge, e.g., 'Made survival and ruthless prioritization his first priority'"
                )

                @classmethod
                def default(cls) -> 'ChallengeObject':
                    return cls(
                        description="",
                        learnings=""
                    )

            class AchievementObject(BaseModel):
                description: str = Field(
                    ..., 
                    description="Description of the achievement, e.g., 'Founding own creative agency \"On Air\"', 'Speaking at TEDx Conferences'"
                )

                @classmethod
                def default(cls) -> 'AchievementObject':
                    return cls(
                        description=""
                    )

            class LifeEventObject(BaseModel):
                name: str = Field(
                    ..., 
                    description="Name or title of the life event, e.g., 'Childhood'"
                )
                description: str = Field(
                    ..., 
                    description="Description of the life event, e.g., 'Grew up on a quiet island called La DÃ©sirade, in Guadeloupe'"
                )

                @classmethod
                def default(cls) -> 'LifeEventObject':
                    return cls(
                        name="",
                        description=""
                    )

            class BusinessObject(BaseModel):
                name: str = Field(
                    ..., 
                    description="Name of the business, e.g., 'Agency \"On Air\"'"
                )
                description: str = Field(
                    ..., 
                    description="Description of the business, e.g., 'Marketing strategist to drive innovation in large corporates'"
                )
                genesis: str = Field(
                    ..., 
                    description="How the business started, e.g., 'Started as a freelancer, building out the skills to turn them into an agency in 2010'"
                )

                @classmethod
                def default(cls) -> 'BusinessObject':
                    return cls(
                        name="",
                        description="",
                        genesis=""
                    )

            class ContentCreatorInfo(BaseModel):
                life_events: List[LifeEventObject] = Field(
                    ..., 
                    description="List of significant life events that shaped the creator's journey"
                )
                business: BusinessObject = Field(
                    ..., 
                    description="Information about the creator's business or primary professional venture"
                )
                values: List[ValueObject] = Field(
                    ..., 
                    description="List of the creator's core values that guide their work and life"
                )
                challenges: List[ChallengeObject] = Field(
                    ..., 
                    description="List of significant challenges faced by the creator and how they overcame them"
                )
                achievements: List[AchievementObject] = Field(
                    ..., 
                    description="List of the creator's notable achievements and milestones"
                )
                first_name: Optional[str] = Field(
                    None, 
                    description="The first name of the content creator"
                )
                last_name: Optional[str] = Field(
                    None, 
                    description="The last name of the content creator"
                )

                @classmethod
                def default(cls) -> 'ContentCreatorInfo':
                    return cls(
                        first_name="",
                        last_name="",
                        life_events=[LifeEventObject.default()],
                        business=BusinessObject.default(),
                        values=[ValueObject.default()],
                        challenges=[ChallengeObject.default()],
                        achievements=[AchievementObject.default()]
                    )
        ```

    Example queries to use:
    
    For values:
    "What principles guide their work?"
    "How do they apply their values?"
    
    For challenges:
    "What difficulties shaped them?"
    "How did they overcome obstacles?"
    
    For achievements:
    "What successes define them?"
    "How have they grown?"
    
    For life events:
    "What moments were pivotal?"
    "How did their past shape them?"
    
    For business:
    "What makes their business unique?"
    "How do they serve clients?"

    Rules for queries:
    - Use plain text queries only
    - One query at a time
    - Keep focused and specific

    Rules for object output:
    - Only return info found using tool
    - Do not make up any information
    - Do not use info from the template that is not in the creator's information
    - Each field from object should be 4-5 sentences long.
  required_input: >
        instagram_username
  expected_output: >
          ContentCreatorInfo(
            first_name="Antoine",
            last_name="Blanco",
            life_events=[
                LifeEventObject(
                    name="Early Childhood in Toulouse",
                    description="Born and raised in Toulouse, France, as the middle child in a family of three brothers, fostering strong familial bonds"
                ),
                LifeEventObject(
                    name="Family Financial Crisis",
                    description="At age 13, experienced parents' divorce following father's job loss. Family home was sold, relocating with mother to a 30mÂ² suburban studio, instilling a keen awareness of financial realities"
                ),
                LifeEventObject(
                    name="Pivotal Sports Injury",
                    description="At 15, suffered severe rugby injury resulting in double collarbone fractures. This led to discovering CrossFit, marking a significant shift in physical training and mental resilience"
                ),
                LifeEventObject(
                    name="Military Training Attempt",
                    description="In 2019, at age 19, entered rigorous military pilot training program, showcasing discipline and ambition"
                ),
                LifeEventObject(
                    name="Pandemic Career Shift",
                    description="Military pilot training postponed due to COVID-19 in 2020, catalyzing a reevaluation of career path towards entrepreneurship"
                ),
                LifeEventObject(
                    name="Launch of Online Coaching",
                    description="In January 2021, at age 21, invested â¬997 in first online course and launched 'Fitness Business Academy', an online sports coaching business"
                ),
                LifeEventObject(
                    name="Expansion into Business Mentorship",
                    description="In 2022, at age 22, created 'Passion to Profits' course, helping others transform their passions into sustainable online businesses"
                ),
                LifeEventObject(
                    name="Strategic Relocation to Dubai",
                    description="Moved operations to Dubai, expanding network and forming key relationships with entrepreneurs like Yomi Denzel and Iman Gadzhi"
                )
            ],
            business=BusinessObject(
                name="Blanco Enterprises",
                description="A multi-faceted online education company offering targeted courses in fitness entrepreneurship and passion-based business development",
                genesis="Evolved from 'Fitness Business Academy' launched in January 2021, expanded to include 'Passion to Profits' course in 2022. Grew from a solo operation to a team of over 30 collaborators, including course mentors, customer support, and marketing specialists"
            ),
            values=[
                ValueObject(
                    name="Deep Human Connections",
                    origin="Nurturing close relationships with two brothers and mother in Toulouse",
                    impact_today="Implements a high-touch, personalized approach in business mentoring. Conducts weekly live Q&A sessions with course participants and maintains an active community forum for peer support"
                ),
                ValueObject(
                    name="Financial Intelligence",
                    origin="Experiencing drastic lifestyle change at 13 due to family's financial crisis",
                    impact_today="Emphasizes sustainable business models and smart money management in courses. Includes modules on pricing strategy, reinvestment principles, and personal finance management for entrepreneurs"
                ),
                ValueObject(
                    name="Resilience Through Adversity",
                    origin="Overcoming career-threatening rugby injury at 15 and pivoting to CrossFit",
                    impact_today="Incorporates 'Setback to Comeback' module in courses, teaching strategies for business pivots and mental resilience. Shares personal story as case study in overcoming obstacles"
                ),
                ValueObject(
                    name="Grounded Success Mindset",
                    origin="Achieving millionaire status by 24 while remembering humble beginnings",
                    impact_today="Promotes 'Humble Hustle' philosophy in business practices. Encourages students to set ambitious goals while maintaining authenticity and social responsibility"
                ),
                ValueObject(
                    name="Disciplined Execution",
                    origin="Rigorous military training experience and rapid business scaling",
                    impact_today="Developed 'Strategic Action Planner' tool for course participants, emphasizing daily discipline, strategic planning, and consistent execution in business growth"
                )
            ],
            challenges=[
                ChallengeObject(
                    description="Adapting to 30mÂ² living space after family financial downturn",
                    learnings="Developed minimalist efficiency mindset. Created 'Lean Launch Strategy' in courses, teaching how to start businesses with minimal resources and maximize ROI"
                ),
                ChallengeObject(
                    description="Rebuilding physical and mental strength after sports injury",
                    learnings="Formulated 'Adaptive Growth Framework' for businesses, teaching flexibility in strategy and product development based on market feedback and personal strengths"
                ),
                ChallengeObject(
                    description="Pivoting from military career to entrepreneurship due to pandemic",
                    learnings="Designed 'Opportunity in Crisis' module, instructing students on identifying market gaps and adapting services during global or personal challenges"
                ),
                ChallengeObject(
                    description="Scaling operations from solo entrepreneur to managing 30+ team members",
                    learnings="Developed 'Scalable Team Structure' blueprint, outlining hiring strategies, team management, and leadership development for growing online businesses"
                )
            ],
            achievements=[
                AchievementObject(
                    description="Transformed â¬997 investment into â¬10,000 monthly revenue within 90 days of launching 'Fitness Business Academy'"
                ),
                AchievementObject(
                    description="Created 'Passion to Profits' course, helping over 500 entrepreneurs establish profitable online businesses within its first year"
                ),
                AchievementObject(
                    description="Scaled 'Blanco Enterprises' to generate an average of â¬300,000 per month by age 24"
                ),
                AchievementObject(
                    description="Built remote team of 30+ specialists, including 5 full-time course mentors, 10 customer support agents, and 15 marketing and content creation experts"
                ),
                AchievementObject(
                    description="Successful expansion to Dubai market, establishing partnerships with 3 prominent local fitness brands for case studies and collaborations"
                ),
                AchievementObject(
                    description="Developed proprietary 'Blanco Method' for Instagram-based client acquisition, achieving 15% conversion rate on sales calls"
                ),
                AchievementObject(
                    description="Featured as 'Top 30 Under 30 Entrepreneur' in French business publication, highlighting innovative online education model"
                ),
                AchievementObject(
                    description="Achieved 92% student satisfaction rate across all courses, with 78% of students reporting doubled income within 6 months of course completion"
                )
            ]
        )
  agent: follow_up_agent

fallback_task:
  description: >
    Use both "Query Instagram DB" and "Query Vector DB" tools to complete information.
    IMPORTANT:
    - Use Instagram DB only if {instagram_username} exists
    - Use Vector DB only if {youtube_channel_handle} exists

    Use plain text queries like:
    "What are their core values?"
    "What challenges did they face?"
    "What achievements stand out?"
    "What shaped their journey?"
    "How did their business grow?"

    Requirements:
    - 3000 words worth of information
    - 8+ items per category
    - Maximum context per item
    - Verified information only

    Rules for object output:
    - Only return info found using tool
    - Do not make up any information
    - Do not use info from the template that is not in the creator's information
    - Each field from object should be 4-5 sentences long.

  dependencies:
    - follow_up_task
    - follow_up_instagram_task
  expected_output: Complete ContentCreatorInfo object
  agent: fallback_agent

prompting_rag_task:
  description: >
    You will use the tool "Prompting RAG Tool" tool to transform ALL the information from the ContentCreatorInfo object gathered throughout the previous tasks into a new narrative that follows the template's structure and style, but tells the creator's story.
    IMPORTANT: The input will be a strong that contains the ContentCreatorInfo object. Let the "Prompting Rag Tool" tool do the work to parse and extract the information.
    IMPORTANT: The output of the tool will do all the work. Keep it unchanged.
  expected_output: >
    The output of the "Prompting RAG" tool.
  agent: prompting_rag_agent

